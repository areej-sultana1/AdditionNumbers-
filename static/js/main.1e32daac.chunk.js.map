{"version":3,"sources":["assets/bar.png","assets/sounds/tostartpressbutton.mp3","assets/sounds/321go.mp3","assets/sounds/rightAnswer.mp3","assets/sounds/wrongAnswer.mp3","assets/sounds/grocerySound.mp3","assets/gif/back.svg","assets/gif/background.gif","redux/reducers/index.jsx","redux/store.jsx","redux/constants/index.jsx","redux/actions/index.jsx","components/Button.jsx","utils/storage.js","containers/Start.jsx","components/Beginning.jsx","constant/colors.js","components/AnswerModal.jsx","utils/math.js","components/Options.jsx","utils/sessionData.js","components/Quiz.jsx","components/Done.jsx","components/Timmer.jsx","components/Lifes.jsx","components/Points.jsx","components/TableScore.jsx","containers/MathQuiz.jsx","App.js","redux/index.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","points","lifes","seconds","level","isFinished","isStarted","compose","applyMiddleware","thunk","createStore","state","arguments","length","undefined","action","type","newPonts","payload","Object","assign","newCorrectState","newLive","lives","stateGame","bol","dispatch","Button","_ref","children","isClicked","react_default","a","createElement","className","onClick","Persistent","set","key","value","localStorage","setItem","get","getItem","Session","sessionStorage","Start","player","startGameSound","Audio","startSoundEffect","countDownSound","countDownEffect","setNameOfPlayer","event","_this","setState","target","clicked","play","props","startPressed","this","components_Button","React","Component","Beginning","msg","handleCount","prevState","_this2","intervalRef","setInterval","nextProps","nextState","clearInterval","isComplete","Colors","yellow","lightBlue","darkGray","midGray","lightGray","darkBg","red","green","Message","_ref2","text","rightSound","correctAnswerSound","wrongSound","wrongAnswerSound","style","color","AnswerModal","modalType","class","el","concat","queryParams","URLSearchParams","window","location","search","dif","getRandomNumber","min","max","Math","random","toFixed","math","generateAdditionProblem","unit","difs","firstNumber","secondNumber","problem","symbol","Options","_React$useState","useState","_React$useState2","slicedToArray","choices","setChoices","useEffect","tempArr","toConsumableArray","Array","parseInt","map","index","getRandomOption","correctAnswer","getNumber","answer","randomOption","display","val","idx","handleClick","limit","tkn","sessionData","authenticate","hitApi","attemptedAnswer","currentDifficulty","units","st","options","cid","crcid","sid","uid","id","$","ajax","url","data","success","console","log","error","symb","streakLimit","Quiz","_isMounted","modal","modalShowing","streaks","totalProblems","earnLife","onEarnLife","showModal","onCorretAnswer","nextProblem","wrongAnswer","onWrongAnswer","setTimeout","getProblem","answerInput","focus","evaluateProblem","correct","toString","keyingUp","ev","Number","match","components_AnswerModal","newProblemSet","MathHelper","onEndGame","width","height","borderBottom","fontSize","marginTop","marginLeft","ans","prob","question","setOptions","i","src","bar","maxWidth","draggable","e","fontFamily","cursor","border","fontWeight","Done","divider","buttonRetry","poinstStyle","retryGame","Timmer","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_secondsIntervalRef","_this3","setTimeChanged","defaultProps","Lifes","hearts","push","Points","container","justifyContent","flex","title","margin","timeCol","padding","sectionContainer","textAlign","RowScore","name","moment","Date","time","fromNow","TableScore","playerName","scoreTable","JSON","parse","now","sort","b","slice","stringify","MathQuiz","isBeginningDone","lastPoints","sound","grocerySound","mute","onRetryGame","completeBeginning","handleSoundClick","paused","pause","components_Done","components_Timmer","components_Lifes","src_components_Quiz","components_Beginning","App","gameStart","onStartGame","backgroundGIF1","alt","src_containers_MathQuiz","containers_Start","connect","s","onReStartGame","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","es","store","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1e32daac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bar.669f8cdb.png\";","module.exports = __webpack_public_path__ + \"static/media/tostartpressbutton.424d1898.mp3\";","module.exports = __webpack_public_path__ + \"static/media/321go.8efff185.mp3\";","module.exports = __webpack_public_path__ + \"static/media/rightAnswer.09b0b7bb.mp3\";","module.exports = __webpack_public_path__ + \"static/media/wrongAnswer.ddcbc59b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/grocerySound.a0d6b138.mp3\";","module.exports = __webpack_public_path__ + \"static/media/back.30400720.svg\";","module.exports = __webpack_public_path__ + \"static/media/background.efc0e331.gif\";","import {\r\n  SET_TIME,\r\n  GAIN_POINTS,\r\n  REMOVE_LIVE,\r\n  CORRECT_ANSWER,\r\n  FINISH_GAME,\r\n  RESTART_GAME,\r\n  REBOOT_GAME,\r\n  START_GAME,\r\n  EARN_LIFE\r\n} from \"../constants\";\r\n\r\nconst initialState = {\r\n  points: 0,\r\n  lifes: 10,\r\n  seconds: 300,\r\n  level: 1,\r\n  isFinished: false,\r\n  isStarted: false\r\n};\r\n\r\nexport const answerQuiz = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case GAIN_POINTS:\r\n      const newPonts = state.points + action.payload;\r\n      return Object.assign({}, state, {\r\n        points: newPonts\r\n      });\r\n    case SET_TIME:\r\n      return Object.assign({}, state, {\r\n        seconds: action.payload\r\n      });\r\n    case CORRECT_ANSWER:\r\n      const newCorrectState = {\r\n        points: state.points + action.payload.points,\r\n        level: state.level + action.payload.level,\r\n      };\r\n      return Object.assign({}, state, newCorrectState);\r\n    case REMOVE_LIVE:\r\n      const newLive = state.lifes - action.payload.lives;\r\n      return Object.assign({}, state, {\r\n        level : state.level - action.payload.level,\r\n        lifes: newLive\r\n      });\r\n    case FINISH_GAME:\r\n      return Object.assign({}, state, {\r\n        isFinished: action.payload\r\n      });\r\n    case RESTART_GAME:\r\n      return Object.assign({}, state, {\r\n        points: 0,\r\n        lifes: 10,\r\n        seconds: 300,\r\n        level: 1,\r\n        isFinished: false\r\n      });\r\n    case START_GAME:\r\n      return Object.assign({}, state, {\r\n        isStarted: true\r\n      });\r\n    case EARN_LIFE:\r\n      return Object.assign({}, state, {\r\n        lifes: state.lifes + 1\r\n      });\r\n    case REBOOT_GAME:\r\n      return Object.assign({}, state, {\r\n        points: 0,\r\n        lifes: 10,\r\n        seconds: 300,\r\n        level: 1,\r\n        isFinished: false,\r\n        isStarted: false\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from 'redux-thunk'\r\nimport { answerQuiz } from './reducers/index'\r\n\r\n\r\nexport default compose(applyMiddleware(thunk))(createStore)(answerQuiz) // store;","export const CORRECT_ANSWER = \"CORRECT_ANSWER\";\r\nexport const WRONG_ANSWER = \"WRONG_ANSWER\";\r\nexport const SET_TIME = \"SET_TIME\";\r\nexport const GAIN_POINTS = \"GAIN_POINTS\";\r\nexport const REMOVE_LIVE = \"REMOVE_LIVE\";\r\nexport const FINISH_GAME = \"FINISH_GAME\";\r\nexport const RESTART_GAME = \"RESTART_GAME\";\r\nexport const REBOOT_GAME = \"REBOOT_GAME\";\r\nexport const START_GAME = \"START_GAME\";\r\nexport const EARN_LIFE = \"EARN_LIFE\";","import {\r\n  REMOVE_LIVE,\r\n  CORRECT_ANSWER,\r\n  SET_TIME,\r\n  FINISH_GAME,\r\n  RESTART_GAME,\r\n  REBOOT_GAME,\r\n  START_GAME,\r\n  EARN_LIFE\r\n} from \"../constants/index\";\r\n\r\nexport const correctAnswer = () => (dispatch) => {\r\n    dispatch({ type: CORRECT_ANSWER, payload: { points: 100, level: 1} });\r\n    \r\n};\r\n\r\nexport const wrongAnswer = () => (dispatch) => {\r\n    dispatch({ type: REMOVE_LIVE, payload:{level : 1 , lives : 1}  });\r\n}\r\n\r\n\r\nexport const timeChaged = seconds => (dispatch) => {\r\n    dispatch({ type: SET_TIME, payload: seconds });    \r\n}\r\n\r\nexport const stateGame = (bol) => (dispatch) => {\r\n    if (bol) {\r\n        dispatch({ type: FINISH_GAME, payload: true });\r\n    } else {\r\n        dispatch({ type: RESTART_GAME, payload: true });\r\n    }\r\n}\r\n\r\nexport const reStartGame = () => (dispatch) => {\r\n    dispatch({ type: REBOOT_GAME });\r\n}\r\n\r\nexport const startGame = () => (dispatch) => {\r\n    dispatch({ type: START_GAME });\r\n}\r\n\r\nexport const earnLife = () => dispatch => {\r\n    dispatch({ type: EARN_LIFE });\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Button({ children, isClicked }) {\r\n  return (\r\n    <button className=\"App-link\" onClick={isClicked}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n  isClicked: PropTypes.func\r\n};\r\n\r\nexport default Button;\r\n","\r\nexport const Persistent = {\r\n\r\n    set(key, value) {\r\n        localStorage.setItem(key, value)\r\n    },\r\n\r\n    get(key) {\r\n        return localStorage.getItem(key);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const Session = {\r\n\r\n    set(key, value) {\r\n        sessionStorage.setItem(key, value)\r\n    },\r\n\r\n    get(key) {\r\n        return sessionStorage.getItem(key);\r\n    }\r\n\r\n}\r\n\r\nexport default {\r\n    Persistent,\r\n    Session\r\n};","import React from 'react';\r\nimport Button from '../components/Button';\r\n// import Input from '../components/Input';\r\nimport { Session } from '../utils/storage'\r\nimport ReactTypingEffect from 'react-typing-effect';\r\nimport startSoundEffect from '../assets/sounds/tostartpressbutton.mp3'\r\nimport countDownEffect from '../assets/sounds/321go.mp3'\r\nclass Start extends React.Component {\r\n\r\n    state = {\r\n        player: \"player\",\r\n        startGameSound: new Audio(startSoundEffect),\r\n        countDownSound: new Audio(countDownEffect)\r\n    }\r\n\r\n    setNameOfPlayer = (event) => {\r\n        this.setState({ player: event.target.value })\r\n    }\r\n\r\n    clicked = () => {\r\n        Session.set(\"onlinePlayer\", this.state.player)\r\n        this.state.countDownSound.play()\r\n\r\n        this.props.startPressed();\r\n    }\r\n\r\n    render() {\r\n        this.state.startGameSound.play()\r\n        return (\r\n            <div >\r\n                <div className=\"App-brandname\">\r\n                    <i className=\"fas fa-graduation-cap\"></i>\r\n                    <br />\r\n                    {/* <ReactTypingEffect\r\n                        text={[\"آج ہم ریاضی کے کچھ تفریحی مسائل سیکھیں گے۔\"]}\r\n                        cursorRenderer={cursor => <h1>{cursor}</h1>}\r\n                        speed={70}\r\n\r\n                        eraseSpeed={70}\r\n                        eraseDelay={3000}\r\n                        displayTextRenderer={(text, i) => {\r\n                            return (\r\n                                <h3>\r\n                                    {text.split('').map((char, i) => {\r\n                                        const key = `${i}`;\r\n                                        return (\r\n                                            <span\r\n                                                key={key}\r\n                                                \r\n                                            >{char}</span>\r\n                                        );\r\n                                    })}\r\n                                </h3>\r\n                            );\r\n                        }}\r\n                    /> */}\r\n                    {/* <h3>Do You Know</h3>\r\n                    <h1>Math?</h1> */}\r\n                </div>\r\n                <p>\r\n                    Press to start the game\r\n                </p>\r\n                <Button isClicked={this.clicked}>Start</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Start;","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Beginning extends React.Component {\r\n  state = {\r\n    msg: 3\r\n  };\r\n  intervalRef;\r\n\r\n  componentDidMount() {\r\n    this.intervalRef = setInterval(() => this.setState(this.handleCount), 1000);\r\n  }\r\n\r\n  handleCount = prevState => {\r\n    if (prevState.msg === 1) {\r\n      return { msg: \"GO\" };\r\n    }\r\n\r\n    if (prevState.msg === \"GO\") {\r\n      return { msg: undefined };\r\n    }\r\n    return { msg: prevState.msg - 1 };\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (nextState.msg === undefined) {\r\n      clearInterval(this.intervalRef);\r\n      this.props.isComplete();\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalRef);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3> GET READY...</h3>\r\n        <h1>{this.state.msg}</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nBeginning.propTypes = {\r\n  isComplete: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Beginning;\r\n","\r\nconst Colors = {\r\n    yellow: \"#d8b600\",\r\n    lightBlue: \"#61dafb\",\r\n    darkGray: \"#999ea7\",\r\n    midGray: \"#424855\",\r\n    lightGray: \"#f5f5f5\",\r\n    darkBg: \"#282c34\",\r\n    red:\"#ff6572\",\r\n    green: \"#31cd61\"\r\n}\r\n\r\nexport default Colors","import React from 'react';\r\nimport Colors from '../constant/colors'\r\nimport PropTypes from 'prop-types'\r\n// import correctAnswerSound from '../assets/sounds/ca.mp3'\r\nimport correctAnswerSound from '../assets/sounds/rightAnswer.mp3'\r\nimport wrongAnswerSound from '../assets/sounds/wrongAnswer.mp3'\r\nfunction AnswerModal({ type, text }) {\r\n    \r\n    if(type != \"success\"){\r\n\r\n    }\r\n    const modalType = type === \"success\" ? \r\n        ({ class: \"correct-answer\", el: <i className=\"fas fa-check\"></i>}) : \r\n\r\n        ({ class: \"wrong-answer\", el: <i className=\"fas fa-times-circle\"></i>});\r\n    return (\r\n        <section>\r\n            <div className={`answer  ${modalType.class}`}>\r\n                <h2> {modalType.el} </h2>\r\n            </div>\r\n            <Message type={type} text={text} />\r\n        </section>\r\n        );\r\n}\r\n\r\nfunction Message({ text, type }) {\r\n    const rightSound = new Audio(correctAnswerSound)\r\n    const wrongSound = new Audio(wrongAnswerSound)\r\n    if (type === \"success\") {\r\n        rightSound.play()\r\n    }\r\n    else{\r\n        wrongSound.play();\r\n    }\r\n    return (\r\n        <span>\r\n            {text && (type === \"success\") && <h4 style={{color: Colors.green }}>{text}</h4> } \r\n            {text && (type !== \"success\") && <h4 style={{color: Colors.midGray }}>Answer:  <span style={{color: Colors.lightGray }}>{text}</span></h4>}\r\n        </span>\r\n    )\r\n}\r\n\r\n\r\nAnswerModal.propTypes = {\r\n    type: PropTypes.oneOf(['success', 'error']),\r\n    text: PropTypes.string,\r\n}\r\n\r\n\r\nexport default AnswerModal;","\r\n/**\r\n * Return a fuction and it will be used to generate the next number of the operation\r\n * \r\n * @param {string} symbol \r\n * @param {number} prev \r\n */\r\n\r\n/**\r\n * Get a random number from zero to range passed as parameter (default 100)\r\n * \r\n * @param {number} range \r\n */\r\nconst queryParams = new URLSearchParams(window.location.search);\r\nconst dif = queryParams.get('dif') ? queryParams.get('dif') : 'b';\r\n// const range = queryParams.get('range') ? queryParams.get('range') : 5\r\nconst getRandomNumber = (min,max) => {  //add unit,min ,max\r\n    // let eq;\r\n    // //let min = 1\r\n    // //let range = 5\r\n    // if (dif == null || dif == \"b\") {\r\n    //     //range = 5\r\n    //     //min = 1\r\n        \r\n    //     eq = ((Math.random() * (max - min)) + 1).toFixed()\r\n    // }\r\n    // else if (dif == \"i\") {\r\n    //     // range = 10\r\n    //     // min = 5\r\n    //     eq = ((Math.random() * (max - min)) + min).toFixed()\r\n    // }\r\n    // else if (dif == \"m\") {\r\n    //     range = 15\r\n    //     min = 5\r\n    //     eq = ((Math.random() * (max - min)) + min).toFixed()\r\n    // }\r\n    // return eq\r\n    return  ((Math.random() * (max - min)) + min).toFixed()\r\n}\r\n/**\r\n * Return an math operation depending of the user's point.\r\n * \r\n * @param {number} points \r\n */\r\n//unit 1,2,3\r\nconst generateAdditionProblem = (unit,difs) => {\r\n    const lv = 1;\r\n    let firstNumber;\r\n    let secondNumber;\r\n    \r\n    //check \r\n    if (unit == 1 && dif =='b')\r\n    {\r\n        \r\n        firstNumber = getRandomNumber(1,4);\r\n        secondNumber = getRandomNumber(1,4);\r\n            \r\n    }\r\n    else if (unit == 1 && dif =='i')\r\n    {\r\n        \r\n        firstNumber = getRandomNumber(5,7);\r\n        secondNumber = getRandomNumber(5,7);\r\n            \r\n    }\r\n    \r\n    else if (unit == 1 && dif =='h')\r\n    {\r\n        \r\n        firstNumber = getRandomNumber(8,10);\r\n        secondNumber = getRandomNumber(8,10);\r\n            \r\n    }\r\n    else if (unit == 2 && dif =='b')\r\n    {\r\n        \r\n        firstNumber = getRandomNumber(11,30);\r\n        secondNumber = getRandomNumber(11,30);\r\n            \r\n    }\r\n    \r\n    else if (unit == 2 && dif =='i')\r\n    {\r\n        \r\n        firstNumber = getRandomNumber(31,60);\r\n        secondNumber = getRandomNumber(31,60);\r\n            \r\n    }\r\n\r\n    \r\n    else if (unit == 2 && dif =='h')\r\n    {\r\n        \r\n        firstNumber = getRandomNumber(61,99);\r\n        secondNumber = getRandomNumber(61,99);\r\n            \r\n    }\r\n    else if (unit == 3 && dif =='b')\r\n    {\r\n        \r\n        firstNumber = getRandomNumber(100,300);\r\n        secondNumber = getRandomNumber(100,300);\r\n            \r\n    }\r\n    \r\n    else if (unit == 3 && dif =='i')\r\n    {\r\n        \r\n        firstNumber = getRandomNumber(301,600);\r\n        secondNumber = getRandomNumber(301,600);\r\n            \r\n    }\r\n    \r\n    else if (unit == 3 && dif =='h')\r\n    {\r\n        \r\n        firstNumber = getRandomNumber(601,1000);\r\n        secondNumber = getRandomNumber(601,1000);\r\n            \r\n    }\r\n\r\n   // let firstNumber = getRandomNumber(dif);\r\n    let symbol = \"+\";\r\n    //let secondNumber = getRandomNumber(dif);\r\n    let problem = firstNumber\r\n    problem += ` ${symbol} ${secondNumber}`\r\n    return { problem, firstNumber, secondNumber, symbol }\r\n}\r\n\r\n\r\n\r\nexport default {\r\n    generateAdditionProblem,\r\n}","import React, { useEffect } from 'react'\r\n\r\nexport default function Options(props) {\r\n    const [choices, setChoices] = React.useState([])\r\n\r\n    useEffect(() => {\r\n        const tempArr = [...Array(parseInt(4))].map((value, index) => {\r\n            return getRandomOption(props.correctAnswer)\r\n        })\r\n        const randomIndex = getNumber(0, tempArr.length)\r\n        tempArr[randomIndex] = props.correctAnswer\r\n        setChoices(tempArr)\r\n    }, [])\r\n    // useEffect(()=> \r\n    // {\r\n    //     // if(correct.length <=0) return\r\n    //     props.setOptions(choices)\r\n\r\n\r\n    // },[choices])\r\n\r\n    const getRandomOption = (answer) => {\r\n        const randomOption = parseInt((Math.random() * ((answer + 10) - (answer - 10)) + answer - 10))\r\n        if (randomOption == answer) {\r\n            return getRandomOption(answer)\r\n        }\r\n        return randomOption\r\n    }\r\n    const getNumber = (max, min) => {\r\n        const number = parseInt((Math.random() * (max - min) + min))\r\n        return number\r\n\r\n    }\r\n    return (\r\n        <div style={{ display: \"flex\" }}>\r\n            {choices.map((val, idx) => {\r\n                return (\r\n                    <button className=\"btn fourth answerButton\" onClick={() => props.handleClick(val)}>\r\n                        {val}\r\n                    </button>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport $ from \"min-jquery\";\r\nconst queryParams = new URLSearchParams(window.location.search);\r\nconst limit = queryParams.get('limit') ? queryParams.get('limit') : 5;\r\nconst dif = queryParams.get('dif') ? queryParams.get('dif') : 'b';\r\nconst tknFromServer = queryParams.get('tkn')\r\nconst tkn = \"f6083658c798db3c3c3227aa5a813c601da7c196fb0871feb0e23bc2528ca35a9253ef957e37d1d7a25e4360a12652ba5493963207def560cd9cab32db8fe0db6602bc278fcfc5be790fb520811d59236734c52e8e25b8dabdece79b16e1815a15bffd16ef0c5e1d46aa9571d6d687d304724f71aa1b06f929ca2b4da5d5add11efa614b69f83ad544bbf2b41c0afe4689c6457f99006d5943affd31ea6f49d3\"\r\nconst type = queryParams.get('type') ? queryParams.get('type') : 'c'\r\n\r\n// let index = 0\r\n// let data = []\r\n// const setData = (problem, wordProblem, attemptedAnswer, corectAnswer) => {\r\n//     data.push({ index: index, problem: problem, wordProblem: wordProblem, attemptedAnswer: attemptedAnswer, corectAnswer: corectAnswer, timeTaken: null })\r\n// }\r\n// const setDataTime = (timeTaken) => {\r\n//     data[index].timeTaken = timeTaken\r\n\r\n//     sendData(data[index].problem, \"a\")\r\n//     sendData(data[index].wordProblem, \"w\")\r\n//     index += 1\r\n//     //console.log(data)\r\n// }\r\nconst hitApi = (problem, attemptedAnswer, answer, currentDifficulty, units, st,options) => {\r\n    \r\n    //const limit = queryParams.get('limit')?queryParams.get('cid'):1;\r\n    const cid = queryParams.get('cid')?queryParams.get('cid'):1;\r\n    const crcid = queryParams.get('crcid')?queryParams.get('crcid'):1;\r\n    const sid = queryParams.get('sid')?queryParams.get('sid'):1;\r\n    const uid = queryParams.get('uid')?queryParams.get('uid'):1;\r\n    const id = queryParams.get('id')?queryParams.get('id'):1;\r\n    $.ajax({\r\n        url: \"https://kicc.pk/iParhai/api.php?prb=\" + problem + \"&aa=\" + attemptedAnswer + \"&ca=\" + answer + \"&tt=\" + 5 + \"&st=\" + st + \"&tkn=\" + tkn + \"&limit=\" + limit + \"&cid=\" + cid + \"&crcid=\" + crcid + \"&sid=\" + sid + \"&dif=\" + currentDifficulty + \"&uid=\" + uid + \"&id=\" + id + \"&type=\" + type + \"&gt=\" + options,\r\n        type: \"post\",\r\n        data: \"\",\r\n        success: function (data) {\r\n            console.log(data)\r\n            //alert(\"hit\")\r\n        },\r\n        error: function (data) {\r\n            //alert(data);\r\n        }\r\n    });\r\n\r\n}\r\n// const sendData = (prb, gt) => {\r\n//     console.log(data[index])\r\n//     const values = \"\"\r\n//     let st = 0\r\n//     if (data[index].attemptedAnswer == data[index].corectAnswer) {\r\n//         st = 1\r\n//     }\r\n//     const limit = queryParams.get('limit');\r\n//     const cid = queryParams.get('cid');\r\n//     const crcid = queryParams.get('crcid');\r\n//     const sid = queryParams.get('sid');\r\n//     const uid = queryParams.get('uid');\r\n//     const id = queryParams.get('id');\r\n//     // alert(\"limit  = \" + limit)\r\n//     // alert(\"cid = \" + cid)\r\n//     // alert(\"crcid = \" + crcid)\r\n//     // alert(\"sid =  \" + sid)\r\n//     // alert(\"dif = \" + dif)\r\n//     // alert(\"uid =  \" + uid)\r\n//     // alert(\"id =  \" + id)\r\n//     //alert(\"enters ajax with \"+ limit+\",\"+cid+\",\"+crcid+\",\"+sid+\",\"+dif+\",\"+uid+\",\"+id)\r\n//     $.ajax({\r\n//         url: \"https://nano-softs.com/adaptive/api.php?prb=\" + prb + \"&aa=\" + data[index].attemptedAnswer + \"&ca=\" + data[index].corectAnswer + \"&tt=\" + data[index].timeTaken + \"&st=\" + st + \"&tkn=\" + tkn + \"&limit=\" + limit + \"&cid=\" + cid + \"&crcid=\" + crcid + \"&sid=\" + sid + \"&dif=\" + dif + \"&uid=\" + uid + \"&id=\" + id + \"&type=\" + type + \"&gt=\" + gt,\r\n//         type: \"post\",\r\n//         data: values,\r\n//         success: function (data) {\r\n//             console.log(data)\r\n//             alert(\"hit\")\r\n//         },\r\n//         error: function (data) {\r\n//             //alert(data);\r\n//         }\r\n//     });\r\n// }\r\nconst authenticate = () => {\r\n    if (tknFromServer == tkn) {\r\n        return true\r\n    }\r\n    return true\r\n}\r\nexport default {\r\n    authenticate,\r\n    hitApi,\r\n    limit,\r\n    dif,\r\n    type\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport AnswerModal from \"./AnswerModal\";\r\nimport { MathHelper } from \"../utils\";\r\nimport './Quiz.css'\r\nimport \"animate.css\"\r\nimport bar from \"../assets/bar.png\"\r\nimport Options from \"./Options\";\r\nimport sessionData from \"../utils/sessionData\";\r\n\r\n\r\nconst queryParams = new URLSearchParams(window.location.search);\r\nconst limit = queryParams.get('limit') ? queryParams.get('limit') : 18;\r\nconst unit = queryParams.get('unit') ? queryParams.get('unit') : 1;\r\nconst symb = queryParams.get('sym') ? queryParams.get('sym'):\"+\";\r\nconst dif = queryParams.get('dif') ? queryParams.get('dif'):\"b\";\r\nconst streakLimit = parseInt(limit / 3)\r\nclass Quiz extends React.Component {\r\n  _isMounted = false;\r\n  _secondsIntervalRef;\r\n  state = {\r\n    problem: \"\",\r\n    firstNumber: 0,\r\n    secondNumber: 0,\r\n    symbol: symb,\r\n    answer: 0,\r\n    modal: \"\",\r\n    modalShowing: false,\r\n    streaks: 0,\r\n    currentDifficulty: 'b',\r\n    units:unit,\r\n    totalProblems: 1,\r\n  };\r\n\r\n  earnLife = () => {\r\n    this.props.onEarnLife();\r\n    this.showModal(\"success\", \"STREAK!! You won a life ♥\");\r\n    if (this.state.currentDifficulty == 'b') {\r\n      this.setState({\r\n        streaks: 0,\r\n        currentDifficulty: 'i'\r\n      });\r\n    }\r\n    else if (this.state.currentDifficulty == 'i') {//hard,med chck\r\n      this.setState({\r\n        streaks: 0,\r\n        currentDifficulty: 'h'\r\n      });\r\n    }\r\n  };\r\n\r\n  correctAnswer = () => {\r\n    console.log(this.state.streaks)\r\n    if (this.state.streaks > streakLimit - 1) {\r\n      this.earnLife();\r\n    } else {\r\n      this.showModal(\"success\");\r\n    }\r\n\r\n    this._isMounted && this.props.onCorretAnswer();\r\n    this.setState(state => {\r\n      return {\r\n        streaks: state.streaks + 1\r\n      };\r\n    });\r\n\r\n    this.nextProblem();\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.getProblem();\r\n\r\n    // this.answerInput.focus();\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    if (this.props.lifes < 1) {\r\n      this.props.onEndGame(this.state.points);\r\n      return false;\r\n    }\r\n    return nextProps.lifes > -1;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.state.totalProblems > limit) {\r\n      this.props.onEndGame(this.state.points)\r\n    }\r\n  }\r\n\r\n  wrongAnswer = () => {\r\n    this._isMounted && this.props.onWrongAnswer();\r\n    \r\n    this.setState({\r\n      streaks: 0\r\n    });\r\n    this.showModal(\"error\");\r\n    this.nextProblem();\r\n  };\r\n\r\n  nextProblem = () => {\r\n    setTimeout(() => {\r\n      this.getProblem();\r\n      this._isMounted &&\r\n        this.setState({\r\n          modalShowing: false,\r\n          totalProblems: this.state.totalProblems + 1\r\n        });\r\n      if (this.props.lifes > 0) (this.answerInput && this.answerInput.focus());\r\n      // if(this.state.totalProblems > streakLimit)\r\n      // {\r\n      //   if(this.state.currentDifficulty == 'b')\r\n      //   {\r\n      //     this.setState({\r\n      //       streaks : 0,\r\n      //       totalProblems :0,\r\n      //       currentDifficulty : 'i',\r\n            \r\n      //     });\r\n      //   }\r\n        \r\n      //   else if(this.state.currentDifficulty == 'i')\r\n      //   {\r\n      //     this.setState({\r\n      //       streaks : 0,\r\n      //       totalProblems :0,\r\n      //       currentDifficulty : 'h',\r\n            \r\n      //     });\r\n      //   }\r\n      //   // else if(this.state.currentDifficulty == 'h')\r\n      //   // {\r\n\r\n      //   //   this.setState({\r\n      //   //     streaks : 0,\r\n      //   //     totalProblems :0,\r\n      //   //     currentDifficulty : 'b',\r\n      //   //     // units: this.state.units +1 <= 3 ? this.state.units +1 :1\r\n      //   //   });\r\n      //   // }\r\n      //}\r\n      }\r\n    , 2500);\r\n  };\r\n\r\n  evaluateProblem = (attemptedAnswer) => {\r\n   let correct = false\r\n    if (attemptedAnswer == this.state.answer) {\r\n      correct = true\r\n      //sessionData.hitApi(this.state.problem,attemptedAnswer.toString(),this.state.answer.toString(),this.state.currentDifficulty,this.state.units,correct?1:0 ,this.state.Options)\r\n    //  return this.correctAnswer();\r\n    }\r\n    sessionData.hitApi(this.state.problem,attemptedAnswer.toString(),this.state.answer.toString(),this.state.currentDifficulty,this.state.units,correct?1:0 ,this.state.Options)\r\n    if(correct){\r\n      return this.correctAnswer()\r\n    }\r\n    else{\r\n      return this.wrongAnswer()\r\n    }\r\n\r\n    \r\n  };\r\n\r\n  keyingUp = ev => {\r\n    if (ev.key === \"Enter\") {\r\n      this.evaluateProblem();\r\n    }\r\n    const val = ev.target.value;\r\n    this.setState({\r\n      answer: Number(val.match(/((-?)\\d+)/g)) // accept just numbers and the minus symbol\r\n    });\r\n  };\r\n\r\n  showModal = (type, text) => {\r\n    this.setState({\r\n      modal: <AnswerModal type={type} text={text} />,\r\n      modalShowing: true\r\n    });\r\n  };\r\n\r\n  getProblem = () => {\r\n    const newProblemSet = MathHelper.generateAdditionProblem(this.state.units ,this.state.currentDifficulty);\r\n    this._isMounted &&\r\n      this.setState({\r\n        problem: newProblemSet.problem,\r\n        firstNumber: newProblemSet.firstNumber,\r\n        secondNumber: newProblemSet.secondNumber,\r\n        symbol: symb,\r\n\r\n        answer: this.state.symbol == '-' ? (parseInt(newProblemSet.firstNumber) - parseInt(newProblemSet.secondNumber)) : (parseInt(newProblemSet.firstNumber) + parseInt(newProblemSet.secondNumber)),\r\n      });\r\n  };\r\n\r\n\r\n\r\n  render() {\r\nif(this.state.units >= 2)\r\n{\r\n  return (\r\n    <section className=\"show-up\" style={{ width: \"100%\", height: \"100vh\" }}>\r\n      <div >\r\n        {this.state.modalShowing ? (\r\n          this.state.modal\r\n        ) : (\r\n          <div>\r\n            <div>\r\n              <div style={{ borderBottom: \"1px solid #aaa\", fontSize: \"1.5em\", marginTop: \"30vh\", marginLeft: \"15%\", width: \"100%\" }}>\r\n                  {/* <div>{this.state.units}</div> */}\r\n                  {/* <div>{this.state.currentDifficulty}</div> */}\r\n                  \r\n                <div style={{ display: \"flex\", marginLeft: \"3vw\" }}>\r\n                  <div > {this.state.firstNumber} </div>\r\n                  \r\n                </div>\r\n\r\n                <div style={{ display: \"flex\" }}>\r\n                  <div > {this.state.symbol} {this.state.secondNumber} </div>\r\n                  \r\n                </div>\r\n              </div>\r\n              {this._isMounted && <Options handleClick={(ans) => this.evaluateProblem(ans)} correctAnswer={this.state.answer} prob = {this.state.question} setOptions = {(options)=>{this.setState({options :options})}} />}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </section >\r\n\r\n  );\r\n\r\n}\r\nelse{\r\nreturn (\r\n      <section className=\"show-up\" style={{ width: \"100%\", height: \"100vh\" }}>\r\n        <div >\r\n          {this.state.modalShowing ? (\r\n            this.state.modal\r\n          ) : (\r\n            <div>\r\n              <div>\r\n                <div style={{ borderBottom: \"1px solid #aaa\", fontSize: \"1.5em\", marginTop: \"30vh\", marginLeft: \"15%\", width: \"100%\" }}>\r\n                    {/* <div>{this.state.units}</div> */}\r\n                    {/* <div>{this.state.currentDifficulty}</div> */}\r\n                    \r\n                  <div style={{ display: \"flex\", marginLeft: \"3vw\" }}>\r\n                    <div > {this.state.firstNumber} </div>\r\n                    <div >{[...Array(parseInt(this.state.firstNumber))].map((value, i) => {\r\n                      return <img key={i} src={bar} style={{ width: \"100%\", maxWidth: \"3vw\" }} draggable=\"false\" />\r\n                    })}</div>\r\n                  </div>\r\n\r\n                  <div style={{ display: \"flex\" }}>\r\n                    <div > {this.state.symbol} {this.state.secondNumber} </div>\r\n                    <div  >{[...Array(parseInt(this.state.secondNumber))].map((e, i) => {\r\n                      return <img key={i} src={bar} style={{ width: \"100%\", maxWidth: \"3vw\" }} draggable=\"false\" />\r\n                    })}</div>\r\n                  </div>\r\n                </div>\r\n                {this._isMounted && <Options handleClick={(ans) => this.evaluateProblem(ans)} correctAnswer={this.state.answer} />}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </section >\r\n\r\n    );\r\n                  }\r\n  }\r\n}\r\n\r\nexport default Quiz;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst style = {\r\n  buttonRetry: {\r\n    fontSize: \"1.5em\",\r\n    color: \"black\",\r\n    fontFamily: \"fantasy\",\r\n    cursor: \"pointer\"\r\n  },\r\n  otherButton: {\r\n    color: \"white\",\r\n    fontFamily: \"fantasy\",\r\n    cursor: \"pointer\",\r\n    fontSize: \"1em\",\r\n    margin: \"0.1em auto 3em\"\r\n  },\r\n  divider: {\r\n    height: 0,\r\n    border: \"0.5px solid #61dafb\"\r\n  },\r\n  poinstStyle: {\r\n    color: \"black\",\r\n    fontWeight: \"bold\"\r\n  }\r\n};\r\n\r\nclass Done extends React.Component {\r\n  render() {\r\n    const { divider, buttonRetry, otherButton, poinstStyle } = style;\r\n    return (\r\n      <div>\r\n        <h1>GAME OVER</h1>\r\n        <hr style={divider} />\r\n        <h3>\r\n          FINAL SCORE <b style={poinstStyle}>{this.props.points}</b>\r\n        </h3>\r\n        <br />\r\n        <h3 style={buttonRetry} onClick={this.props.retryGame}>\r\n          RETRY\r\n        </h3>\r\n        {/* <h5 style={otherButton} onClick={this.props.onReStartGame}>\r\n        Another player\r\n      </h5> */}\r\n        {this.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDone.propTypes = {\r\n  points: PropTypes.number.isRequired,\r\n  retryGame: PropTypes.func.isRequired,\r\n  onReStartGame: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Done;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst queryParams = new URLSearchParams(window.location.search);\r\nconst limit = queryParams.get('limit') ? queryParams.get('limit') : 15;\r\n\r\nclass Timmer extends React.Component {\r\n\r\n    _secondsIntervalRef;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            seconds: this.props.seconds,\r\n            level: this.props.level,\r\n            limit: 0,\r\n            totalProblems: 1\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            seconds: this.props.seconds,\r\n            limit: limit\r\n        });\r\n        this._secondsIntervalRef = setInterval(() => this.setState(prevState => ({\r\n            seconds: --prevState.seconds\r\n        })), 1000)\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.props.level !== this.state.level) {\r\n            //sessionData.setDataTime(300 - this.state.seconds)\r\n            this.setState(prevState => ({\r\n                level: this.props.level,\r\n                //seconds: prevState.seconds + 20,\r\n                totalProblems: this.state.totalProblems + 1,\r\n                seconds: 300\r\n\r\n            }));\r\n\r\n            this.props.setTimeChanged(this.state.seconds);\r\n        }\r\n\r\n        // if (this.state.seconds < 0 || this.state.totalProblems > this.state.limit) {\r\n        //     this.props.onEndGame(this.props.points);\r\n        // }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this._secondsIntervalRef);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span>\r\n                 {/* <i className=\"fas fa-clock\"></i> <b>{ this.state.seconds }</b>  */}\r\n                <b> {this.state.totalProblems}/{this.state.limit} </b>\r\n            </span>\r\n        )\r\n    }\r\n\r\n    timeTaken() {\r\n        return 20 - this.state.seconds\r\n    }\r\n}\r\n\r\nTimmer.propTypes = {\r\n    seconds: PropTypes.number.isRequired,\r\n    level: PropTypes.number.isRequired,\r\n}\r\n\r\nTimmer.defaultProps = {\r\n    level: 0\r\n}\r\n\r\nexport default Timmer;","import React from 'react'\r\nimport Colors from '../constant/colors';\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Lifes({ lifes }) {\r\n\r\n    let hearts = [];\r\n\r\n    if (lifes < 5) {\r\n        for (let i = 0; i < lifes; i++) {\r\n            hearts.push(<i key={i} style={{marginLeft: \"0.1em\"}} className=\"fas fa-heart\"></i>)\r\n        }\r\n    } else {\r\n        hearts.push(<i key={lifes} style={{marginLeft: \"0.1em\"}} className=\"fas fa-heart\"></i>)\r\n    }\r\n\r\n    \r\n    return (\r\n        <span style={{color: Colors.red}}>\r\n            {lifes > 4 && <b>{`${lifes}x`}</b> }\r\n            {hearts}\r\n        </span>\r\n    );\r\n}\r\n\r\nLifes.propTypes = {\r\n    lifes: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Lifes","import React from 'react'\r\nimport Colors from '../constant/colors'\r\n\r\nexport default function Points ({ points }) {\r\n\r\n    return (\r\n        <span>\r\n            <i className=\"fas fa-star\" style={{ color: Colors.yellow }}></i> {points}\r\n        </span>\r\n        )\r\n\r\n}","import React from 'react'\r\nimport { Session, Persistent } from '../utils/storage'\r\nimport * as moment from 'moment'\r\nimport Colors from '../constant/colors';\r\n\r\n\r\n\r\nconst style = {\r\n    container:{\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n    },\r\n    el: {\r\n        flex: 1\r\n    },\r\n    title: {\r\n        margin: \"0.6em auto\"\r\n    },\r\n    divider: { border: `0.5px solid ${Colors.midGray}`},\r\n    timeCol: {\r\n        flex: 1,\r\n        padding: \"0.3em 0em\",\r\n        fontSize: \"0.6em\",\r\n        color: Colors.darkGray,\r\n    },\r\n    sectionContainer: { textAlign: \"left\", padding: \"0.15em 0em\" }\r\n}\r\n\r\n\r\n\r\nfunction RowScore ({ player }) {\r\n    return (\r\n        <div style={style.sectionContainer}>\r\n            <h5 style={style.title}>{player.name}</h5>\r\n            <div style={style.container}>\r\n                <small style={style.timeCol}>\r\n                    <i className=\"fas fa-clock\"></i> \r\n                    {\" \" + moment(new Date(player.time)).fromNow()}\r\n                </small>\r\n                <small style={style.el}><i className=\"fas fa-star\" style={{color: Colors.yellow }}></i> {player.points}</small>\r\n            </div>\r\n            <hr style={style.divider} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default function TableScore ({ points }) {\r\n\r\n    const playerName = Session.get(\"onlinePlayer\");\r\n    let scoreTable = JSON.parse(Persistent.get(\"scoreTable\")) || [];\r\n\r\n    scoreTable.push({\r\n        name: playerName,\r\n        points,\r\n        time: Date.now()\r\n    })\r\n\r\n    scoreTable = scoreTable.sort((a, b) => b.points - a.points).slice(0,4)\r\n\r\n    Persistent.set(\"scoreTable\", JSON.stringify(scoreTable))\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                scoreTable.map((player, i) => {\r\n                    return (\r\n                        <RowScore player={player} key={i} />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport Beginning from \"../components/Beginning\";\r\nimport Quiz from \"../components/Quiz\";\r\nimport Done from \"../components/Done\";\r\nimport Timmer from '../components/Timmer';\r\nimport Lifes from '../components/Lifes'\r\nimport Points from '../components/Points'\r\nimport \"./MathQuiz.css\"\r\nimport TableScore from '../components/TableScore';\r\nimport grocerySound from '../assets/sounds/grocerySound.mp3'\r\n\r\nclass MathQuiz extends React.Component {\r\n  state = {\r\n    isBeginningDone: false,\r\n    lastPoints: 0,\r\n    // sound: false,\r\n    // curr: this.notPlayAudioWithVideo\r\n    sound: new Audio(grocerySound),\r\n    mute: false\r\n  };\r\n\r\n  retryGame = () => {\r\n    this.setState({ isBeginningDone: false })\r\n    this.props.onRetryGame();\r\n  }\r\n  componentDidMount() {\r\n    this.state.sound.play()\r\n\r\n  }\r\n\r\n  completeBeginning = () => {\r\n    this.setState({ isBeginningDone: true });\r\n  };\r\n  handleSoundClick = () => {\r\n    if (!this.state.sound.paused) {\r\n      this.state.sound.pause()\r\n      this.setState({\r\n        mute: true\r\n      })\r\n    }\r\n    else if (this.state.sound.paused) {\r\n      this.state.sound.play()\r\n      this.setState({\r\n        mute: false\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return !this.props.isFinished ? (\r\n      <div>\r\n        {!this.state.isBeginningDone ? (\r\n          <Beginning isComplete={this.completeBeginning} />\r\n        ) : (\r\n          <div className=\"noselect \">\r\n            {/* <img src={this.state.images.map()} alt=\"learning\" /> */}\r\n            <div className=\"App-header-bar\">\r\n              <span onClick={this.handleSoundClick}>\r\n                {this.state.mute ? <i className=\"fas fa-volume-mute\" /> : <i className=\"fa fa-volume-up \" />}\r\n              </span>\r\n              <Timmer {...this.props} />\r\n              <Lifes {...this.props} />\r\n              <Points {...this.props} />\r\n            </div>\r\n            <div>\r\n              <Quiz {...this.props} />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    ) : (\r\n      <Done {...this.props} retryGame={this.retryGame} >\r\n        <TableScore {...this.props} />\r\n      </ Done>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MathQuiz;","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\"\r\nimport { mapDispatchToProps, mapStateToProps } from './redux/index'\r\nimport Start from './containers/Start';\r\nimport MathQuiz from './containers/MathQuiz';\r\nimport './App.css';\r\nimport backgroundGIF from './assets/gif/background.gif'\r\nimport backgroundGIF1 from './assets/gif/back.svg'\r\n\r\n\r\nclass App extends Component {\r\n\r\n  gameStart = () => {\r\n    this.props.onStartGame();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src={backgroundGIF1} id=\"bg\" alt=\"\" />\r\n          {\r\n            !this.props.isStarted ? (\r\n              <Start startPressed={this.gameStart} />\r\n            ) : (\r\n              <MathQuiz {...this.props} gameStart={this.gameStart} />\r\n            )\r\n          }\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import {\r\n  correctAnswer,\r\n  wrongAnswer,\r\n  timeChaged,\r\n  stateGame,\r\n  reStartGame,\r\n  startGame,\r\n  earnLife\r\n} from \"./actions/index\";\r\n\r\nexport const mapStateToProps = state => {\r\n  return {\r\n    points: state.points,\r\n    lifes: state.lifes,\r\n    seconds: state.seconds,\r\n    level: state.level,\r\n    isFinished: state.isFinished,\r\n    isStarted: state.isStarted\r\n  };\r\n};\r\n\r\nexport const mapDispatchToProps = dispatch => {\r\n  return {\r\n    onCorretAnswer: s => dispatch(correctAnswer(s)),\r\n    onWrongAnswer: () => dispatch(wrongAnswer()),\r\n    setTimeChanged: s => dispatch(timeChaged(s)),\r\n    onEndGame: () => dispatch(stateGame(true)),\r\n    onRetryGame: () => dispatch(stateGame(false)),\r\n    onReStartGame: () => dispatch(reStartGame()),\r\n    onStartGame: () => dispatch(startGame()),\r\n    onEarnLife: () => dispatch(earnLife()),\r\n  };\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    // <Provider store={store} >\r\n    //     {/* <BrowserRouter>\r\n    //         <Route path=\"/iparhaiMathGame/:id\" render={(props) => <App {...props} />} />\r\n    //     </BrowserRouter> */}\r\n    //     <App />\r\n    // </Provider>\r\n    <Provider store={store} >\r\n        <App />\r\n    </Provider>\r\n\r\n    , document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}